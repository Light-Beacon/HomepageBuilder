builder.init: 'Initializing builder'
builder.load.resources: 'Loading builder resources'
builder.load.structures: 'Loading builder structures'
builder.load.modules: 'Loading builder modules'
builder.load.plugins: "Loading builder plugins"


## COMMANDS
command: 'Command'
command.interrupted: 'User interrupted, system exit'
command.system_exit: 'System exit'
command.usage_prefix: 'Usage:'
command.positional_arguments: 'Positional arguments:'
command.optional_arguments: 'Optional arguments:'
command.options: 'Options:'

### BUILD
command.build.help: 'Build homepage'
command.build.done: 'Build done, files saved to ${path}'
command.build.failed: 'Build failed'
command.build.help.args.project: 'Project file (Project.yml) path'
command.build.help.args.output: 'Output path for generated files'
command.build.help.args.page: 'Page name'
command.build.help.args.all_page: 'Generate all pages'
command.build.help.args.dry_run: 'Dry run'
command.build.help.args.not_pcl: 'Set client to non-PCL edition'
command.build.help.args.pcl_is_opensource: 'Set PCL is open source edition'
command.build.help.args.pcl_versionid: 'Set PCL version ID'

### HELP
command.help: 'show this help message and exit'
command.help.debug: 'Start in debug mode'
command.help.logging_level: 'Set logging level'

### CREATE
command.create.help: 'Create a new project'
command.create.help.args.template: 'Template to use'
command.create.help.args.location: 'Project location'
command.create.folder_not_empty: 'The folder is not empty! Creating a new project may damage your files!'
command.create.folder_not_empty.confirm: 'Do you still want to create a new project in this folder? [y/n] '
command.create.folder_not_empty.input_error: 'Input error. Please input "yes" or "no"'
command.create.folder_not_empty.max_retry: 'You have tried too many times. The project creation is cancelled.'
command.create.created: 'Project created successfully with template {template}'
command.create.template_not_exist: 'Template ${template} does not exist'

### SERVER
command.server.help: 'Start the server'
command.server.help.args.port: 'Server port'
command.server.help.args.project: 'Project file (Project.yml) path'
command.server.help.args.flask_debug: 'Enable Flask debug mode'

## PLUGIN
plugin.load: 'Loading plugin: ${plugin}'
plugin.load.data: 'Loading plugin data'
plugin.load.structures: 'Loading plugin structures'
plugin.load.resources: 'Loading plugin resources'
plugin.load.modules: 'Loading plugin modules'

type.component: 'Component'

debug.timer.start: '${func}(${count}) Timer Started'
debug.timer.stop: '${func}(${count}) Timer Stopped, Time used: ${time}s'
event.subscribe: '${func} subcribed event ${name}'
event.triggered: 'Triggered event ${event_name}'
event.error: 'An error raised duiring routing ${event_name}: ${ex}'
io.format.unsupported: 'File format (${exten}) of ${path} is unsupported.'
library.load: 'Loading library: ${name}'
loader.regist.structure: 'Regist structure: ${name}'
loader.regist.structure.withtype: 'Regist structure: (${type_name}) ${name}'
module.load: 'Loading module: ${name}'
module.load.success: 'Loading module successfully: ${name}'
module.reload: 'Reload module: ${name}'
module.page.import.start: 'Start to import code-driven page'
module.page.import.one.init: 'Load code-driven page: ${name}'
module.page.import.one.add: 'Registed code-driven page:${name}'
module.page.import.success: 'Load code-driven page successfully'
page.not_found: 'Cannot find page named ${page}'
page.data_not_dict: 'Page data is not a dictionary, unable to process'
page.generate.done: 'Generated page ${page}'
page.get_card: 'Get card: ${card_ref}'
page.get_card.null: 'Skiped null card'
page.get_card.failed: 'Failed to get card due to: ${ex}'
project.init: "Initializing.."
project.load.basic_res: "Loading basic resources"
project.load.modules: "Loading modules"
project.load.success: "Pack loaded successful!"
project.import.start: "Start to import pack at: ${path}"
project.import.projectfilenotfound: "Cannot find project description file ${path}"
project.import.pack.version.too.new: "Pack version(${packversion}) is too newer than builder version(${packversion})"
project.import.pack.version.too.old: "Pack version(${packversion}) is too older than builder version(${packversion})"
project.import.pack.version.new: "Pack version(${packversion}) is newer than builder version(${packversion})"
project.import.pack.version.old: "Pack version(${packversion}) is newer than builder version(${packversion})"
project.import.pack.version: "Pack version: ${packversion}"
project.import.cards: 'Loading cards'
project.import.resources: 'Importing resources'
project.import.pages: 'Loading pages'
project.import.modules: 'Loading modules'
project.import.success: 'Loading finished.'
project.gen_page.start: 'Getting codes of the page ${page}'
project.gen_page.failed.notfound: 'Cannot find page named ${page}'
project.check_module_list.error: 'Cannot find module(s): ${wait_list}'
script.invoke.failed.notfound: 'Try to invoke not existed script ${name}'
refresher.triggered: 'Refresher triggered'
resource.load: 'Loading resource pack: ${path}'
resource.style.missingtarget: 'Target type of that style is missing'
resourceloader.load.resourcefile: 'Loading resources file: ${name}'
resourceloader.load.regist: 'Regist resource key: (${type_name}) ${name} '
server.init: 'Server Initializing...'
server.start: 'Server Started on port ${port}'
server.request.received: 'Received request get ${page} with ${args}'
server.request.response.json: 'Responed request of ${page} with json'
server.request.response.page: 'Responed request of ${page} with page content'
server.request.response.not_found: 'Responed request of ${page} with not found'
server.request.response.error: 'An error occured during responding the request of ${page} with args ${args}'
template.build: 'Using ${template} template to build the card'